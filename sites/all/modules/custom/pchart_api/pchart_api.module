<?php

// $Id$



/**

 * @file

 * Provides a programming interface for pChart

 */



require_once(libraries_get_path('pchart') . '/class/pData.class.php');

require_once(libraries_get_path('pchart') . '/class/pDraw.class.php');

require_once(libraries_get_path('pchart') . '/class/pImage.class.php');

require_once(libraries_get_path('pchart') . '/class/pPie.class.php');

require_once(libraries_get_path('pchart') . '/class/pRadar.class.php');

require_once(libraries_get_path('pchart') . '/class/pScatter.class.php');



module_load_include('inc', 'pchart_api', 'pchart_api.class');



/**

 * Implements hook_menu().

 */

function pchart_api_menu() {

  // Module settings.

  $items['admin/config/media/pchart'] = array(

    'title' => 'pChart API Settings',

    'description' => 'pChart configuration',

    'page callback' => 'drupal_get_form',

    'page arguments' => array('pchart_api_admin_settings'),

    'access arguments' => array('access administration pages'),

    'file' => 'pchart_api.admin.inc',

    'file path' => drupal_get_path('module', 'pchart_api'),

  );

  return $items;

}





/**

 * Implements hook_help().

 */

function pchart_api_help($path, $arg) {

  switch ($path) {

    case 'admin/help/pchart':

      return t('This is some help text for the pchart_api settings page.');



    case 'admin/help#pchart':

      $output = '<p>' . t('This is help text for the pchart_api help page') . '</p>';

      return $output;

  }

}



function pchart_api_init() {

    //$directory = PCHART_IMAGE_DIRECTORY_URI;

    //file_prepare_directory($directory, FILE_CREATE_DIRECTORY);

}



function another_sample_chart() {

  $myData = new pData();

  $myData->addPoints(array(30,36,25),"Serie1");

  $myData->setSerieDescription("Serie1","Categories");

  $myData->setSerieOnAxis("Serie1",0);

  

  $myData->addPoints(array("Roles","Communication","Leadership"),"Absissa");

  $myData->setAbscissa("Absissa");

  

  $myData->setAxisPosition(0,AXIS_POSITION_RIGHT);

  $myData->setAxisName(0,"Mean");

  $myData->setAxisUnit(0,"");

  

  $myPicture = new pImage(700,230,$myData,TRUE);

  $myPicture->setGraphArea(70,40,695,180);

  $myPicture->setFontProperties(array("R"=>0,"G"=>0,"B"=>0,"FontName"=>PCHART_FONT_DIRECTORY . "GeosansLight.ttf","FontSize"=>9));

  

  $Settings = array("Pos"=>SCALE_POS_TOPBOTTOM

  , "Mode"=>SCALE_MODE_START0

  , "LabelingMethod"=>LABELING_ALL

  , "GridR"=>255, "GridG"=>255, "GridB"=>255, "GridAlpha"=>50, "TickR"=>0, "TickG"=>0, "TickB"=>0, "TickAlpha"=>50, "LabelRotation"=>0, "CycleBackground"=>1, "DrawXLines"=>0, "DrawYLines"=>NONE);

  $myPicture->drawScale($Settings);

  

  $Config = array("Rounded"=>1, "AroundZero"=>1);

  $myPicture->drawBarChart($Config);

  

  /* Render the picture (choose the best way) */

  $image_location = variable_get('pchart_api_image_directory') . 'another_bar_chart.png';

  $myPicture->render($image_location); // 'sites/default/files/pchart_api/images/where_is_this_chart.png'); //

  return base_path() . $image_location;

}



function bar_chart_test() {

  

  $image_folder = variable_get('pchart_api_image_directory');

  $image_location = $image_folder . 'test_bar_chart.png';

    

   /* Create and populate the pData object */

  $MyData = new pData();  

  $MyData->addPoints(array(13251,4118,3087,1460,1248),"Hits");

  $MyData->setAxisName(0,"Hits");

  $MyData->addPoints(array("Firefox","Chrome","Internet Explorer","Opera","Safari"),"Browsers");

  $MyData->setSerieDescription("Browsers","Browsers");

  $MyData->setAbscissa("Browsers");

  //$MyData->setAbscissaName("Browsers");

  $MyData->setAxisDisplay(0,AXIS_FORMAT_METRIC,1);

  $MyData->setAxisPosition(0,AXIS_POSITION_RIGHT);

  

  /* Create the pChart object */

  $myPicture = new pImage(600,250,$MyData, TRUE);

  //$myPicture->XSize = 600;

  

  //$myPicture->drawGradientArea(0,0,500,500,DIRECTION_VERTICAL,array("StartR"=>240,"StartG"=>240,"StartB"=>240,"EndR"=>180,"EndG"=>180,"EndB"=>180,"Alpha"=>100));

  //$myPicture->drawGradientArea(0,0,500,500,DIRECTION_HORIZONTAL,array("StartR"=>240,"StartG"=>240,"StartB"=>240,"EndR"=>180,"EndG"=>180,"EndB"=>180,"Alpha"=>20));

  $myPicture->setFontProperties(array("FontName" => PCHART_FONT_DIRECTORY . "verdana.ttf", "FontSize" => 10));

  

  /* Draw the chart scale */ 

  $myPicture->setGraphArea(125,10,580,220);

  $myPicture->drawScale(array("CycleBackground"=>FALSE,"DrawSubTicks"=>FALSE,"GridR"=>0,"GridG"=>0,"GridB"=>0,"GridAlpha"=>10,"Pos"=>SCALE_POS_TOPBOTTOM)); // 

  

  /* Turn on shadow computing */ 

  //$myPicture->setShadow(TRUE,array("X"=>1,"Y"=>1,"R"=>0,"G"=>0,"B"=>0,"Alpha"=>10));

  

  /* Draw the chart */ 

  $myPicture->drawBarChart(array("DisplayPos"=>LABEL_POS_INSIDE,"DisplayValues"=>TRUE,"Rounded"=>TRUE,"Surrounding"=>30));

  

  /* Write the legend */ 

  //$myPicture->drawLegend(570,215,array("Style"=>LEGEND_NOBORDER,"Mode"=>LEGEND_HORIZONTAL));

  

  /* Render the picture (choose the best way) */

  $myPicture->render($image_location); // 'sites/default/files/pchart_api/images/where_is_this_chart.png'); //

  return base_path() . $image_location;

}



function pchart_test_library() {

    

  $image_folder = variable_get('pchart_api_image_directory');

  $image_location = $image_folder . 'test_chart.png';

  //return $image_location;

  

  

  /* Create the pData object */

  $myData = new pData();  

  

  /* Create the X axis and the binded series */

  for ($i=0;$i<=360;$i=$i+10) { $myData->addPoints(cos(deg2rad($i))*20,"Probe 1"); }

  for ($i=0;$i<=360;$i=$i+10) { $myData->addPoints(sin(deg2rad($i))*20,"Probe 2"); }

  $myData->setAxisName(0,"Index");

  $myData->setAxisXY(0,AXIS_X);

  $myData->setAxisPosition(0,AXIS_POSITION_BOTTOM);

  

  /* Create the Y axis and the binded series */

  for ($i=0;$i<=360;$i=$i+10) { $myData->addPoints($i,"Probe 3"); }

  $myData->setSerieOnAxis("Probe 3",1);

  $myData->setAxisName(1,"Degree");

  $myData->setAxisXY(1,AXIS_Y);

  $myData->setAxisUnit(1,"?");

  $myData->setAxisPosition(1,AXIS_POSITION_RIGHT);

  

  /* Create the 1st scatter chart binding */

  $myData->setScatterSerie("Probe 1","Probe 3",0);

  $myData->setScatterSerieDescription(0,"This year");

  $myData->setScatterSerieColor(0,array("R"=>0,"G"=>0,"B"=>0));

  

  /* Create the 2nd scatter chart binding */

  $myData->setScatterSerie("Probe 2","Probe 3",1);

  $myData->setScatterSerieDescription(1,"Last Year");

  $myData->setScatterSeriePicture(1, PCHART_RESOURCE_DIRECTORY . "accept.png");

  

  /* Create the pChart object */

  $myPicture = new pImage(500,400,$myData);

  

  /* Draw the background */

  $Settings = array("R"=>170, "G"=>183, "B"=>87, "Dash"=>1, "DashR"=>190, "DashG"=>203, "DashB"=>107);

  $myPicture->drawFilledRectangle(0,0,500,400,$Settings);

  

  /* Overlay with a gradient */

  $Settings = array("StartR"=>219, "StartG"=>231, "StartB"=>139, "EndR"=>1, "EndG"=>138, "EndB"=>68, "Alpha"=>50);

  $myPicture->drawGradientArea(0,0,500,400,DIRECTION_VERTICAL,$Settings);

  $myPicture->drawGradientArea(0,0,500,20,DIRECTION_VERTICAL,array("StartR"=>0,"StartG"=>0,"StartB"=>0,"EndR"=>50,"EndG"=>50,"EndB"=>50,"Alpha"=>80));

  

  /* Write the picture title */ 

  $myPicture->setFontProperties(array("FontName"=>PCHART_FONT_DIRECTORY . "verdana.ttf","FontSize"=>10));

  $myPicture->drawText(10,13,"drawScatterPlotChart() - Draw a scatter plot chart",array("R"=>255,"G"=>255,"B"=>255));

  

  /* Add a border to the picture */

  $myPicture->drawRectangle(0,0,499,399,array("R"=>0,"G"=>0,"B"=>0));

  

  /* Set the default font */

  $myPicture->setFontProperties(array("FontName"=>PCHART_FONT_DIRECTORY . "verdana.ttf","FontSize"=>8));

  

  /* Set the graph area */

  $myPicture->setGraphArea(50,50,350,350);

  

  /* Create the Scatter chart object */

  $myScatter = new pScatter($myPicture,$myData);

  

  /* Draw the scale */

  $myScatter->drawScatterScale();

  

  /* Turn on shadow computing */

  $myPicture->setShadow(TRUE,array("X"=>1,"Y"=>1,"R"=>0,"G"=>0,"B"=>0,"Alpha"=>10));

  

  /* Draw a scatter plot chart */

  $myScatter->drawScatterPlotChart();

  

  /* Draw the legend */

  $myScatter->drawScatterLegend(250,375,array("Mode"=>LEGEND_HORIZONTAL,"Style"=>LEGEND_NOBORDER));

  

  /* Render the picture (choose the best way) */

  //$myPicture->autoOutput("pictures/example.drawScatterPlotChart.png");

  $myPicture->render($image_location); // 'sites/default/files/pchart_api/images/where_is_this_chart.png'); //

  return base_path() . $image_location;



}



function pchart_test_class() {

  return 'Hello Factory!'; //DrupalpChartFactory::create_chart('null');

}